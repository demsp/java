https://javatalks.ru/topics/7636
Давай разбираться. Джава - объектно-ориентированный язык. Через new ты создаешь экземпляры объектов некоего класса. 
Но класс - это тоже объект по сути, который занимает место в памяти и на который можно получить ссылку.
Когда программа пишет .class файл, она делит все переменные в классе на две части. static будут записаны в объект класса. 
Этот тип переменных увеличит размер самого класса. Объект класса - он один в памяти и грузится один раз и на все время работы. 
Соответственно и статическая переменная - одна на класс и соответственно - одна на все созданные объекты данного класса.

Не-статические переменные будут записываться в порожденные объекты, для каждого порожденного объекта будет свой независимый 
набор этих переменных, которыми можно манипулировать независимо друг от друга.
Дык вот. В момент старта программы загружается только класс. Ни одного экземпляра объекта нет, пока не создашь через new. 
Не-статичных переменных, которые храняться в объектах, тоже нет еще и нет для них места в оперативной памяти. 
Их неоткуда читать и некак писать. Поэтому и ругается программа, что ты пытаешься обратиться к нестатичным переменным 
из статичной функции.

P.S. Вот для примера, ты автоматизируешь единую диспетчерскую систему аэропортов страны. Удельная плотность керосина - 
единая величина для всех аэропортов. То есть, от объема купленного топлива можно посчитать его вес в любой момент, 
ничего не зная о конкретном аэропорте. Плотность - статичная величина. А длина ВПП и количество стоянок на перроне - 
для каждого аэропорта своя. Пока ты не создашь экземпляр аэропорта через new и не загрузишь инфу из базы данных - 
ты не сможешь оперировать этими величинами. Без выбранного аэропорта количество стоянок - абстрактное понятие, 
не имеющее никакого смысла.
